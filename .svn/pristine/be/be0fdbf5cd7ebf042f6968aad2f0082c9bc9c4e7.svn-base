<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:annotation-config />

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="cn.*" />

	<import resource="dbconnection.xml" />

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" />
			<tx:method name="insert*" />
			<tx:method name="update*" />
			<tx:method name="save*" />
			<tx:method name="delete*" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* *..service.impl.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	
	<!-- iBatis -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:SqlMapsConfig.xml</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- <bean id="sqlServerMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
			<value>classpath:SqlMapsConfig_MS.xml</value>
		</property>
		<property name="dataSource" ref="sqlServer_dataSource" />
	</bean> -->
	
	<bean id="configuration" class="org.apache.commons.configuration.PropertiesConfiguration" init-method="load">
        <property name="encoding" value="UTF-8"/>
        <property name="fileName">
        	<value>application.properties</value>
        </property>
    </bean>
    
    <context:property-placeholder location="classpath*:/application.properties" ignore-unresolvable="true"/>
    
    <bean name="memcachedClient" class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean"
          destroy-method="shutdown">
        <property name="servers">
            <value>${memcached.hosts}</value>
        </property>
        <property name="connectionPoolSize" value="${memcached.connectionPoolSize}"/>
        <!-- SASL验证使用协议,must use binary protocol, default is TextCommandFactory -->
        <property name="commandFactory">
            <bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"/>
        </property>
        <!-- 客户端分布策略(一致性哈希算法),Distributed strategy -->
        <property name="sessionLocator">
            <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"/>
        </property>
        <property name="opTimeout" value="2000"/>
        <property name="configuration">
            <bean class="com.google.code.yanf4j.config.Configuration">
                <property name="readThreadCount" value="50"/>
                <property name="writeThreadCount" value="50"/>
                <property name="checkSessionTimeoutInterval" value="5000"/>
                <property name="soTimeout" value="5000"/>
            </bean>
        </property>
    </bean>
</beans>